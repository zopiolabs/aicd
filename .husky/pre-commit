#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

echo "üöÄ Running pre-commit checks..."

# Check for merge conflicts
if git diff --cached --name-only | xargs grep -E "^(<<<<<<<|=======|>>>>>>>)" 2>/dev/null; then
  echo "${RED}‚ùå Merge conflict markers detected!${NC}"
  echo "Please resolve merge conflicts before committing."
  exit 1
fi

# Check for console.log statements (warning only)
CONSOLE_LOGS=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|jsx|ts|tsx)$' | xargs grep -n "console\.log" 2>/dev/null || true)
if [ -n "$CONSOLE_LOGS" ]; then
  echo "${YELLOW}‚ö†Ô∏è  Warning: console.log statements found:${NC}"
  echo "$CONSOLE_LOGS" | while IFS= read -r line; do
    echo "   $line"
  done
  echo "${YELLOW}Consider removing console.log statements before committing.${NC}"
fi

# Check for large files (>5MB)
LARGE_FILES=$(git diff --cached --name-only | while read file; do
  if [ -f "$file" ]; then
    SIZE=$(wc -c < "$file" 2>/dev/null || echo 0)
    if [ "$SIZE" -gt 5242880 ]; then
      echo "$file ($(($SIZE / 1048576))MB)"
    fi
  fi
done)

if [ -n "$LARGE_FILES" ]; then
  echo "${YELLOW}‚ö†Ô∏è  Warning: Large files detected:${NC}"
  echo "$LARGE_FILES"
  echo "${YELLOW}Consider using Git LFS for large files.${NC}"
fi

# Run lint-staged for fast checks on staged files
echo "üìù Running lint and format checks on staged files..."
pnpm exec lint-staged

if [ $? -ne 0 ]; then
  echo "${RED}‚ùå Pre-commit checks failed!${NC}"
  echo "Please fix the issues above and try again."
  exit 1
fi

echo "${GREEN}‚úÖ Pre-commit checks passed!${NC}"